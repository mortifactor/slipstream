name: Release slipstream

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write   # <— важно для ghcr.io

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      # ===== x86_64 native build =====
      - name: Install build dependencies (x86_64)
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev ninja-build clang

      - name: Configure CMake (x86_64)
        run: |
          cmake \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -DCMAKE_MAKE_PROGRAM=ninja \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++ \
            -G Ninja \
            -S ${{ github.workspace }} \
            -B ${{ github.workspace }}/build

      - name: Build with CMake (x86_64)
        run: |
          cmake --build ${{ github.workspace }}/build -j"$(nproc)" \
            --target slipstream-client slipstream-server

      - name: Rename Binaries (x86_64)
        run: |
          VERSION=${{ github.ref_name }}
          mv ${{github.workspace}}/build/slipstream-client ${{github.workspace}}/build/slipstream-client-${VERSION}-linux-x86_64
          mv ${{github.workspace}}/build/slipstream-server ${{github.workspace}}/build/slipstream-server-${VERSION}-linux-x86_64

      # ===== ARM64 build in aarch64 container =====
      - name: Build ARM64 (aarch64) in Ubuntu container
        uses: uraimo/run-on-arch-action@v3
        with:
          arch: aarch64
          distro: ubuntu22.04
          # Если нет прав на GHCR/кэш, НЕ указывайте githubToken.
          # githubToken: ${{ github.token }}
          dockerRunArgs: |
            --platform linux/arm64
            --volume "${{ github.workspace }}:/workspace"
          env: |  # Важно: плоский YAML-маппинг
            BUILD_TYPE: ${{ env.BUILD_TYPE }}
            VERSION: ${{ github.ref_name }}
          install: |
            apt-get update
            DEBIAN_FRONTEND=noninteractive apt-get install -y \
              cmake clang ninja-build pkg-config libssl-dev git ca-certificates
            update-ca-certificates
            git --version
          run: |
            set -euxo pipefail
      
            cmake \
              -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
              -DCMAKE_MAKE_PROGRAM=ninja \
              -DCMAKE_C_COMPILER=clang \
              -DCMAKE_CXX_COMPILER=clang++ \
              -G Ninja \
              -S /workspace \
              -B /workspace/build-arm64 || {
                echo "---- CMakeOutput.log (configure) ----" || true
                cat /workspace/build-arm64/CMakeFiles/CMakeOutput.log || true
                echo "---- CMakeError.log (configure) ----" || true
                cat /workspace/build-arm64/CMakeFiles/CMakeError.log || true
                exit 1
              }
      
            cmake --build /workspace/build-arm64 -j"$(nproc)" \
              --target slipstream-client slipstream-server || {
                echo "---- CMakeOutput.log (build) ----" || true
                cat /workspace/build-arm64/CMakeFiles/CMakeOutput.log || true
                echo "---- CMakeError.log (build) ----" || true
                cat /workspace/build-arm64/CMakeFiles/CMakeError.log || true
                exit 1
              }
      
            mv /workspace/build-arm64/slipstream-client /workspace/build/slipstream-client-${VERSION}-linux-arm64
            mv /workspace/build-arm64/slipstream-server /workspace/build/slipstream-server-${VERSION}-linux-arm64


      # ===== Release both arches =====
      - name: Release
        uses: softprops/action-gh-release@v2
        #if: github.ref_type == 'tag'
        with:
          draft: false
          generate_release_notes: true
          files: |
            build/slipstream-client-*
            build/slipstream-server-*
