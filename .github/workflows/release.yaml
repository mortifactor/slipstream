name: Build & Release (multi-arch)

on:
  push:
    tags:
      - 'v*.*.*'   # runs when you push a semver tag like v0.1.0
  workflow_dispatch:

jobs:
  build-linux-arm64:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    env:
      BUILD_TYPE: Release

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install cross toolchain and deps (ARM64)
        run: |
          set -euxo pipefail
          sudo dpkg --add-architecture arm64
          sudo apt-get update
          # Компиляторы, ninja, целевой pkg-config и OpenSSL dev для arm64
          sudo apt-get install -y \
            crossbuild-essential-arm64 \
            ninja-build \
            pkg-config-aarch64-linux-gnu \
            libssl-dev:arm64
          # Если проект использует zlib/icu/curl и т.п., добавьте их :arm64 аналоги:
          # sudo apt-get install -y zlib1g-dev:arm64 libicu-dev:arm64 libcurl4-openssl-dev:arm64

      - name: Configure CMake (Linux ARM64)
        env:
          PKG_CONFIG: pkg-config-aarch64-linux-gnu
        run: |
          cmake \
            -G Ninja \
            -S "${{ github.workspace }}" \
            -B "${{ github.workspace }}/build-linux-arm64" \
            -DCMAKE_BUILD_TYPE="${{ env.BUILD_TYPE }}" \
            -DCMAKE_SYSTEM_NAME=Linux \
            -DCMAKE_SYSTEM_PROCESSOR=aarch64 \
            -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc \
            -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ \
            -DPKG_CONFIG_EXECUTABLE="${PKG_CONFIG}"
          # При необходимости можно подсказать find_package(OpenSSL) через pkg-config выше.
          # Если нужны статические линковки, добавьте: -DOPENSSL_USE_STATIC_LIBS=ON

      - name: Build (Linux ARM64)
        run: |
          cmake --build "${{ github.workspace }}/build-linux-arm64" \
            -j "$(nproc)" \
            --target slipstream-client slipstream-server

      - name: Rename ARM64 Binaries
        run: |
          set -euo pipefail
          VERSION="${{ github.ref_name }}"
          BASE="${{ github.workspace }}/build-linux-arm64"
          test -f "${BASE}/slipstream-client"
          test -f "${BASE}/slipstream-server"
          mv "${BASE}/slipstream-client" "${BASE}/slipstream-client-${VERSION}-linux-arm64"
          mv "${BASE}/slipstream-server" "${BASE}/slipstream-server-${VERSION}-linux-arm64"

      - name: Release (attach ARM64 binaries)
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          draft: true
          generate_release_notes: true
          files: |
            build-linux-arm64/slipstream-client-*-linux-arm64
            build-linux-arm64/slipstream-server-*-linux-arm64


